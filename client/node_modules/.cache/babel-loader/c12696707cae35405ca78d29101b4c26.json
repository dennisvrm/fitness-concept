{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dennisvreman/Documents/han/dwa/project-dwa/concepts/fitness/client/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useHistory } from 'react-router-dom';\nimport { register, editFirstName, editLastName, editEmail, editPassword, editPasswordRepeated } from '../actions/register';\n\nconst Register = props => {\n  _s();\n\n  const error = props.registerRequestError ? /*#__PURE__*/_jsxDEV(Alert, {\n    variant: \"danger\",\n    children: props.registerRequestError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const loadingButton = props.registerRequest ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spinner, {\n      as: \"span\",\n      animation: \"border\",\n      size: \"sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sr-only\",\n      children: \"Registreren...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Registreren\"\n  }, void 0, false);\n  const history = useHistory();\n  useEffect(() => {\n    if (props.registerRequestSuccess) history.push('/inloggen');\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registreren\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error, /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"firstName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Voornaam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"firstName\",\n          defaultValue: props.editingFirstName ? props.editingFirstName : '',\n          onChange: e => {\n            props.editFirstName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"lastName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Achternaam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"lastName\",\n          value: props.editingLastName ? props.editingLastName : '',\n          onChange: e => {\n            props.editLastName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          name: \"email\",\n          value: props.editingEmail ? props.editingEmail : '',\n          onChange: e => {\n            props.editEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Wachtwoord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          value: props.editingPassword ? props.editingPassword : '',\n          onChange: e => {\n            props.editPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"passwordRepeated\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Wachtwoord herhalen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"passwordRepeated\",\n          value: props.editingPasswordRepeated ? props.editingPasswordRepeated : '',\n          onChange: e => {\n            props.editPasswordRepeated(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => props.register(),\n        children: loadingButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nconst mapStateToProps = state => ({\n  editingFirstName: state.register.editingFirstName,\n  editingLastName: state.register.editingLastName,\n  editingEmail: state.register.editingEmail,\n  editingPassword: state.register.editingPassword,\n  editingPasswordRepeated: state.register.editingPasswordRepeated,\n  registerRequest: state.register.registerRequest,\n  registerRequestError: state.register.registerRequestError,\n  registerRequestSuccess: state.register.registerRequestSuccess\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  register,\n  editFirstName,\n  editLastName,\n  editEmail,\n  editPassword,\n  editPasswordRepeated\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/dennisvreman/Documents/han/dwa/project-dwa/concepts/fitness/client/src/components/Register.js"],"names":["React","useEffect","connect","bindActionCreators","Form","Button","Alert","Spinner","useHistory","register","editFirstName","editLastName","editEmail","editPassword","editPasswordRepeated","Register","props","error","registerRequestError","loadingButton","registerRequest","history","registerRequestSuccess","push","editingFirstName","e","target","value","editingLastName","editingEmail","editingPassword","editingPasswordRepeated","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { React, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useHistory } from 'react-router-dom';\nimport {\n  register,\n  editFirstName,\n  editLastName,\n  editEmail,\n  editPassword,\n  editPasswordRepeated,\n} from '../actions/register';\n\nconst Register = (props) => {\n  const error = props.registerRequestError ? (\n    <Alert variant=\"danger\">{props.registerRequestError}</Alert>\n  ) : (\n    <></>\n  );\n\n  const loadingButton = props.registerRequest ? (\n    <>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n      <span className=\"sr-only\">Registreren...</span>\n    </>\n  ) : (\n    <>Registreren</>\n  );\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (props.registerRequestSuccess) history.push('/inloggen');\n  });\n\n  return (\n    <>\n      <h1>Registreren</h1>\n      {error}\n      <Form>\n        <Form.Group controlId=\"firstName\">\n          <Form.Label>Voornaam</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"firstName\"\n            defaultValue={props.editingFirstName ? props.editingFirstName : ''}\n            onChange={(e) => {\n              props.editFirstName(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"lastName\">\n          <Form.Label>Achternaam</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"lastName\"\n            value={props.editingLastName ? props.editingLastName : ''}\n            onChange={(e) => {\n              props.editLastName(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            value={props.editingEmail ? props.editingEmail : ''}\n            onChange={(e) => {\n              props.editEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Wachtwoord</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={props.editingPassword ? props.editingPassword : ''}\n            onChange={(e) => {\n              props.editPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordRepeated\">\n          <Form.Label>Wachtwoord herhalen</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"passwordRepeated\"\n            value={\n              props.editingPasswordRepeated ? props.editingPasswordRepeated : ''\n            }\n            onChange={(e) => {\n              props.editPasswordRepeated(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={() => props.register()}>\n          {loadingButton}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  editingFirstName: state.register.editingFirstName,\n  editingLastName: state.register.editingLastName,\n  editingEmail: state.register.editingEmail,\n  editingPassword: state.register.editingPassword,\n  editingPasswordRepeated: state.register.editingPasswordRepeated,\n\n  registerRequest: state.register.registerRequest,\n  registerRequestError: state.register.registerRequestError,\n  registerRequestSuccess: state.register.registerRequestSuccess,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      register,\n      editFirstName,\n      editLastName,\n      editEmail,\n      editPassword,\n      editPasswordRepeated,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}