{"ast":null,"code":"// Action types\nexport const WORKOUTS_REQUEST = 'WORKOUTS_REQUEST',\n      WORKOUTS_REQUEST_ERROR = 'WORKOUTS_REQUEST_ERROR',\n      WORKOUTS_REQUEST_SUCCESS = 'WORKOUTS_REQUEST_SUCCESS',\n      EDIT_WORKOUT_NAME = 'EDIT_WORKOUT_NAME',\n      SUBMIT_ADD_WORKOUT_FORM = 'SUBMIT_ADD_WORKOUT_FORM',\n      ADD_WORKOUT_REQUEST = 'ADD_WORKOUT_REQUEST',\n      ADD_WORKOUT_REQUEST_ERROR = 'ADD_WORKOUT_REQUEST_ERROR',\n      ADD_WORKOUT_REQUEST_SUCCESS = 'ADD_WORKOUT_REQUEST_SUCCESS'; // Action creators\n\nexport const editWorkoutName = workoutName => ({\n  type: EDIT_WORKOUT_NAME,\n  workoutName\n});\nexport const submitAddWorkoutForm = () => ({\n  type: SUBMIT_ADD_WORKOUT_FORM\n});\nexport const workoutsRequest = () => ({\n  type: WORKOUTS_REQUEST\n});\nexport const workoutsRequestError = error => ({\n  type: WORKOUTS_REQUEST_ERROR,\n  error\n});\nexport const workoutsRequestSuccess = workouts => ({\n  type: WORKOUTS_REQUEST_SUCCESS,\n  workouts\n});\nexport const addWorkoutRequest = () => ({\n  type: ADD_WORKOUT_REQUEST\n});\nexport const addWorkoutRequestError = error => ({\n  type: ADD_WORKOUT_REQUEST_ERROR,\n  error\n});\nexport const addWorkoutRequestSuccess = workout => ({\n  type: ADD_WORKOUT_REQUEST_SUCCESS,\n  workout\n});\nexport const retrieveWorkouts = () => async (dispatch, getState) => {\n  dispatch(workoutsRequest());\n  const state = getState();\n\n  try {\n    const response = await fetch(`http://localhost:4000/api/${state.authentication.userId}/workouts`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      },\n      credentials: 'include',\n      mode: 'cors'\n    });\n    responseJson = await response.json();\n    if (response.status !== 200) throw new Error();\n    return dispatch(workoutsRequestSuccess(responseJson));\n  } catch (e) {\n    console.error(e);\n    return dispatch(workoutsRequestError('Retrieve workouts error'));\n  }\n};\nexport const addWorkout = () => async (dispatch, getState) => {\n  dispatch(submitAddWorkoutForm());\n  dispatch(addWorkoutRequest());\n  const state = getState();\n\n  try {\n    const response = await fetch(`http://localhost:4000/api/${state.authentication.userId}/workouts`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      mode: 'cors',\n      body: JSON.stringify({\n        workoutName: state.workouts.workoutName\n      })\n    });\n    responseJson = await response.json();\n    if (response.status !== 200) throw new Error();\n    return dispatch(addWorkoutRequestSuccess(responseJson));\n  } catch (e) {\n    console.error(e);\n    return dispatch(addWorkoutRequestError('Add workout error'));\n  }\n};","map":{"version":3,"sources":["/Users/dennisvreman/Documents/han/dwa/project-dwa/concepts/fitness/client/src/actions/workouts.js"],"names":["WORKOUTS_REQUEST","WORKOUTS_REQUEST_ERROR","WORKOUTS_REQUEST_SUCCESS","EDIT_WORKOUT_NAME","SUBMIT_ADD_WORKOUT_FORM","ADD_WORKOUT_REQUEST","ADD_WORKOUT_REQUEST_ERROR","ADD_WORKOUT_REQUEST_SUCCESS","editWorkoutName","workoutName","type","submitAddWorkoutForm","workoutsRequest","workoutsRequestError","error","workoutsRequestSuccess","workouts","addWorkoutRequest","addWorkoutRequestError","addWorkoutRequestSuccess","workout","retrieveWorkouts","dispatch","getState","state","response","fetch","authentication","userId","method","headers","Accept","credentials","mode","responseJson","json","status","Error","e","console","addWorkout","body","JSON","stringify"],"mappings":"AAAA;AACA,OAAO,MAAMA,gBAAgB,GAAG,kBAAzB;AAAA,MACLC,sBAAsB,GAAG,wBADpB;AAAA,MAELC,wBAAwB,GAAG,0BAFtB;AAAA,MAGLC,iBAAiB,GAAG,mBAHf;AAAA,MAILC,uBAAuB,GAAG,yBAJrB;AAAA,MAKLC,mBAAmB,GAAG,qBALjB;AAAA,MAMLC,yBAAyB,GAAG,2BANvB;AAAA,MAOLC,2BAA2B,GAAG,6BAPzB,C,CASP;;AACA,OAAO,MAAMC,eAAe,GAAIC,WAAD,KAAkB;AAC/CC,EAAAA,IAAI,EAAEP,iBADyC;AAE/CM,EAAAA;AAF+C,CAAlB,CAAxB;AAKP,OAAO,MAAME,oBAAoB,GAAG,OAAO;AACzCD,EAAAA,IAAI,EAAEN;AADmC,CAAP,CAA7B;AAIP,OAAO,MAAMQ,eAAe,GAAG,OAAO;AACpCF,EAAAA,IAAI,EAAEV;AAD8B,CAAP,CAAxB;AAGP,OAAO,MAAMa,oBAAoB,GAAIC,KAAD,KAAY;AAC9CJ,EAAAA,IAAI,EAAET,sBADwC;AAE9Ca,EAAAA;AAF8C,CAAZ,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,QAAD,KAAe;AACnDN,EAAAA,IAAI,EAAER,wBAD6C;AAEnDc,EAAAA;AAFmD,CAAf,CAA/B;AAKP,OAAO,MAAMC,iBAAiB,GAAG,OAAO;AACtCP,EAAAA,IAAI,EAAEL;AADgC,CAAP,CAA1B;AAGP,OAAO,MAAMa,sBAAsB,GAAIJ,KAAD,KAAY;AAChDJ,EAAAA,IAAI,EAAEJ,yBAD0C;AAEhDQ,EAAAA;AAFgD,CAAZ,CAA/B;AAIP,OAAO,MAAMK,wBAAwB,GAAIC,OAAD,KAAc;AACpDV,EAAAA,IAAI,EAAEH,2BAD8C;AAEpDa,EAAAA;AAFoD,CAAd,CAAjC;AAKP,OAAO,MAAMC,gBAAgB,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClED,EAAAA,QAAQ,CAACV,eAAe,EAAhB,CAAR;AAEA,QAAMY,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,6BAA4BF,KAAK,CAACG,cAAN,CAAqBC,MAAO,WAD/B,EAE1B;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE;AADD,OAFX;AAKEC,MAAAA,WAAW,EAAE,SALf;AAMEC,MAAAA,IAAI,EAAE;AANR,KAF0B,CAA5B;AAWAC,IAAAA,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAArB;AAEA,QAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B,MAAM,IAAIC,KAAJ,EAAN;AAE7B,WAAOf,QAAQ,CAACP,sBAAsB,CAACmB,YAAD,CAAvB,CAAf;AACD,GAjBD,CAiBE,OAAOI,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACzB,KAAR,CAAcwB,CAAd;AACA,WAAOhB,QAAQ,CAACT,oBAAoB,CAAC,yBAAD,CAArB,CAAf;AACD;AACF,CA1BM;AA4BP,OAAO,MAAM2B,UAAU,GAAG,MAAM,OAAOlB,QAAP,EAAiBC,QAAjB,KAA8B;AAC5DD,EAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AACAW,EAAAA,QAAQ,CAACL,iBAAiB,EAAlB,CAAR;AAEA,QAAMO,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,MAAI;AACF,UAAME,QAAQ,GAAG,MAAMC,KAAK,CACzB,6BAA4BF,KAAK,CAACG,cAAN,CAAqBC,MAAO,WAD/B,EAE1B;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFX;AAMEC,MAAAA,WAAW,EAAE,SANf;AAOEC,MAAAA,IAAI,EAAE,MAPR;AAQEQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBlC,QAAAA,WAAW,EAAEe,KAAK,CAACR,QAAN,CAAeP;AADT,OAAf;AARR,KAF0B,CAA5B;AAeAyB,IAAAA,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAArB;AAEA,QAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B,MAAM,IAAIC,KAAJ,EAAN;AAE7B,WAAOf,QAAQ,CAACH,wBAAwB,CAACe,YAAD,CAAzB,CAAf;AACD,GArBD,CAqBE,OAAOI,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACzB,KAAR,CAAcwB,CAAd;AACA,WAAOhB,QAAQ,CAACJ,sBAAsB,CAAC,mBAAD,CAAvB,CAAf;AACD;AACF,CA/BM","sourcesContent":["// Action types\nexport const WORKOUTS_REQUEST = 'WORKOUTS_REQUEST',\n  WORKOUTS_REQUEST_ERROR = 'WORKOUTS_REQUEST_ERROR',\n  WORKOUTS_REQUEST_SUCCESS = 'WORKOUTS_REQUEST_SUCCESS',\n  EDIT_WORKOUT_NAME = 'EDIT_WORKOUT_NAME',\n  SUBMIT_ADD_WORKOUT_FORM = 'SUBMIT_ADD_WORKOUT_FORM',\n  ADD_WORKOUT_REQUEST = 'ADD_WORKOUT_REQUEST',\n  ADD_WORKOUT_REQUEST_ERROR = 'ADD_WORKOUT_REQUEST_ERROR',\n  ADD_WORKOUT_REQUEST_SUCCESS = 'ADD_WORKOUT_REQUEST_SUCCESS';\n\n// Action creators\nexport const editWorkoutName = (workoutName) => ({\n  type: EDIT_WORKOUT_NAME,\n  workoutName,\n});\n\nexport const submitAddWorkoutForm = () => ({\n  type: SUBMIT_ADD_WORKOUT_FORM,\n});\n\nexport const workoutsRequest = () => ({\n  type: WORKOUTS_REQUEST,\n});\nexport const workoutsRequestError = (error) => ({\n  type: WORKOUTS_REQUEST_ERROR,\n  error,\n});\nexport const workoutsRequestSuccess = (workouts) => ({\n  type: WORKOUTS_REQUEST_SUCCESS,\n  workouts,\n});\n\nexport const addWorkoutRequest = () => ({\n  type: ADD_WORKOUT_REQUEST,\n});\nexport const addWorkoutRequestError = (error) => ({\n  type: ADD_WORKOUT_REQUEST_ERROR,\n  error,\n});\nexport const addWorkoutRequestSuccess = (workout) => ({\n  type: ADD_WORKOUT_REQUEST_SUCCESS,\n  workout,\n});\n\nexport const retrieveWorkouts = () => async (dispatch, getState) => {\n  dispatch(workoutsRequest());\n\n  const state = getState();\n\n  try {\n    const response = await fetch(\n      `http://localhost:4000/api/${state.authentication.userId}/workouts`,\n      {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n        },\n        credentials: 'include',\n        mode: 'cors',\n      }\n    );\n    responseJson = await response.json();\n\n    if (response.status !== 200) throw new Error();\n\n    return dispatch(workoutsRequestSuccess(responseJson));\n  } catch (e) {\n    console.error(e);\n    return dispatch(workoutsRequestError('Retrieve workouts error'));\n  }\n};\n\nexport const addWorkout = () => async (dispatch, getState) => {\n  dispatch(submitAddWorkoutForm());\n  dispatch(addWorkoutRequest());\n\n  const state = getState();\n\n  try {\n    const response = await fetch(\n      `http://localhost:4000/api/${state.authentication.userId}/workouts`,\n      {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        mode: 'cors',\n        body: JSON.stringify({\n          workoutName: state.workouts.workoutName,\n        }),\n      }\n    );\n    responseJson = await response.json();\n\n    if (response.status !== 200) throw new Error();\n\n    return dispatch(addWorkoutRequestSuccess(responseJson));\n  } catch (e) {\n    console.error(e);\n    return dispatch(addWorkoutRequestError('Add workout error'));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}