{"ast":null,"code":"// Action types\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST',\n      REGISTER_REQUEST_ERROR = 'REGISTER_REQUEST_ERROR',\n      REGISTER_REQUEST_SUCCESS = 'REGISTER_REQUEST_SUCCESS',\n      EDIT_FIRST_NAME = 'EDIT_FIRST_NAME',\n      EDIT_LAST_NAME = 'EDIT_LAST_NAME',\n      EDIT_EMAIL = 'EDIT_EMAIL',\n      EDIT_PASSWORD = 'EDIT_PASSWORD',\n      EDIT_PASSWORD_REPEATED = 'EDIT_PASSWORD_REPEATED',\n      SUBMIT_REGISTER_FORM = 'SUBMIT_REGISTER_FORM'; // Action creators\n\nexport const editFirstName = firstName => ({\n  type: EDIT_FIRST_NAME,\n  firstName\n});\nexport const editLastName = lastName => ({\n  type: EDIT_LAST_NAME,\n  lastName\n});\nexport const editEmail = email => ({\n  type: EDIT_EMAIL,\n  email\n});\nexport const editPassword = password => ({\n  type: EDIT_PASSWORD,\n  password\n});\nexport const editPasswordRepeated = passwordRepeated => ({\n  type: EDIT_PASSWORD_REPEATED,\n  passwordRepeated\n});\nexport const submitRegisterForm = () => ({\n  type: SUBMIT_REGISTER_FORM\n});\nexport const registerRequest = () => ({\n  type: REGISTER_REQUEST\n});\nexport const registerRequestError = error => ({\n  type: REGISTER_REQUEST_ERROR,\n  error\n});\nexport const registerRequestSuccess = () => ({\n  type: REGISTER_REQUEST_SUCCESS\n});\nexport const register = () => async (dispatch, getState) => {\n  dispatch(submitRegisterForm());\n  dispatch(registerRequest());\n  const state = getState();\n\n  try {\n    const response = await fetch(`http://localhost:4000/api/register`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      mode: 'cors',\n      body: JSON.stringify({\n        firstName: state.register.firstName,\n        lastName: state.register.lastName,\n        email: state.register.email,\n        password: state.register.password,\n        passwordRepeated: state.register.passwordRepeated\n      })\n    });\n    if (response.status !== 200) throw new Error(await response.text());\n    return dispatch(registerRequestSuccess());\n  } catch (e) {\n    console.error(e);\n    return dispatch(registerRequestError(e.message));\n  }\n};","map":{"version":3,"sources":["/Users/dennisvreman/Documents/han/dwa/project-dwa/concepts/fitness/client/src/actions/register.js"],"names":["REGISTER_REQUEST","REGISTER_REQUEST_ERROR","REGISTER_REQUEST_SUCCESS","EDIT_FIRST_NAME","EDIT_LAST_NAME","EDIT_EMAIL","EDIT_PASSWORD","EDIT_PASSWORD_REPEATED","SUBMIT_REGISTER_FORM","editFirstName","firstName","type","editLastName","lastName","editEmail","email","editPassword","password","editPasswordRepeated","passwordRepeated","submitRegisterForm","registerRequest","registerRequestError","error","registerRequestSuccess","register","dispatch","getState","state","response","fetch","method","headers","Accept","credentials","mode","body","JSON","stringify","status","Error","text","e","console","message"],"mappings":"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","sourcesContent":["// Action types\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST',\n  REGISTER_REQUEST_ERROR = 'REGISTER_REQUEST_ERROR',\n  REGISTER_REQUEST_SUCCESS = 'REGISTER_REQUEST_SUCCESS',\n  EDIT_FIRST_NAME = 'EDIT_FIRST_NAME',\n  EDIT_LAST_NAME = 'EDIT_LAST_NAME',\n  EDIT_EMAIL = 'EDIT_EMAIL',\n  EDIT_PASSWORD = 'EDIT_PASSWORD',\n  EDIT_PASSWORD_REPEATED = 'EDIT_PASSWORD_REPEATED',\n  SUBMIT_REGISTER_FORM = 'SUBMIT_REGISTER_FORM';\n\n// Action creators\nexport const editFirstName = (firstName) => ({\n  type: EDIT_FIRST_NAME,\n  firstName,\n});\nexport const editLastName = (lastName) => ({\n  type: EDIT_LAST_NAME,\n  lastName,\n});\nexport const editEmail = (email) => ({\n  type: EDIT_EMAIL,\n  email,\n});\nexport const editPassword = (password) => ({\n  type: EDIT_PASSWORD,\n  password,\n});\nexport const editPasswordRepeated = (passwordRepeated) => ({\n  type: EDIT_PASSWORD_REPEATED,\n  passwordRepeated,\n});\n\nexport const submitRegisterForm = () => ({\n  type: SUBMIT_REGISTER_FORM,\n});\n\nexport const registerRequest = () => ({\n  type: REGISTER_REQUEST,\n});\nexport const registerRequestError = (error) => ({\n  type: REGISTER_REQUEST_ERROR,\n  error,\n});\nexport const registerRequestSuccess = () => ({\n  type: REGISTER_REQUEST_SUCCESS,\n});\n\nexport const register = () => async (dispatch, getState) => {\n  dispatch(submitRegisterForm());\n  dispatch(registerRequest());\n\n  const state = getState();\n\n  try {\n    const response = await fetch(`http://localhost:4000/api/register`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n      mode: 'cors',\n      body: JSON.stringify({\n        firstName: state.register.firstName,\n        lastName: state.register.lastName,\n        email: state.register.email,\n        password: state.register.password,\n        passwordRepeated: state.register.passwordRepeated,\n      }),\n    });\n\n    if (response.status !== 200) throw new Error(await response.text());\n\n    return dispatch(registerRequestSuccess());\n  } catch (e) {\n    console.error(e);\n    return dispatch(registerRequestError(e.message));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}